Parameters:
  AccessAddressesParameter:
    Type: String
    Default: 0.0.0.0/0
    Description: CIDR range of adresses to have ssh access to the instance
    AllowedPattern: ^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/\d{1,2}$

  KeyNameParameter:
    Type: String
    Default: US-West-2-key
    Description: Name of key to use to ssh into the instance

  InstanceTypeParameter:
    Type: String
    Description: Type of instance to use
    Default: p2.xlarge

Resources:
  StorageBucket:
    Type: "AWS::S3::Bucket"

  EC2Instance:
    Type: "AWS::EC2::Instance"
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref InstanceLaunchTemplate
        Version: !GetAtt InstanceLaunchTemplate.LatestVersionNumber

  InstanceSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable access on port 22"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "22"
          ToPort: "22"
          CidrIp: !Ref AccessAddressesParameter
        - IpProtocol: tcp
          FromPort: "9000"
          ToPort: "9000"
          CidrIp: !Ref AccessAddressesParameter

  InstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      RoleName: "training-instance-role"
      Policies:
        - PolicyName: BucketAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetAccessPoint"
                  - "s3:ListAllMyBuckets"
                  - "s3:ListAccessPoints"
                  - "s3:CreateJob"
                Resource: "*"
              - Effect: Allow
                Action:
                  - "s3:ListBucket"
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetObjectVersion"
                  - "s3:DeleteObject"
                  - "s3:DeleteObjectVersion"
                  - "s3:RestoreObject"
                  - "s3:AbortMultipartUpload"
                Resource: !GetAtt StorageBucket.Arn

  InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      InstanceProfileName: training-instance-profile
      Roles:
        - !Ref InstanceRole

  InstanceLaunchTemplate:
    Type: "AWS::EC2::LaunchTemplate"
    Properties:
      LaunchTemplateName: TrainingInstanceTemplate
      LaunchTemplateData:
        KeyName: !Ref KeyNameParameter
        IamInstanceProfile:
          Arn: !GetAtt InstanceProfile.Arn
        ImageId: "ami-0a20a878a1c1e5477"
        InstanceType: !Ref InstanceTypeParameter
        SecurityGroups:
          - !Ref InstanceSG
        InstanceMarketOptions:
          MarketType: spot
          SpotOptions:
            InstanceInterruptionBehavior: stop
            SpotInstanceType: persistent
